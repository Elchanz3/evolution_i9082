
n.n.n / 2014-02-17
==================

 * 1.5 version is born
 * Zram: accept up to 4 devices
 * enabled zram and zsmalloc
 * added zswap and zbud and enabled.
 * zbud from 3.11 kernel
 *   mm: Rename function "reset_page_mapcount" to "page_mapcount_reset"
 * update cleancache to 3.11 kernel
 * update frontswap to 3.11 kernel
 * fix mm/kconfig
 * Add zswap backend from Linux kernel 3.11
 * adapt frontswap to 3.0 kernel
 * Backport zbud from kernel 3.11
 * adapt zram to  zsmalloc from 3.11 kernel
 * update zsmalloc to kernel 3.11
 * update zcache to kernel 3.11
 * backport frontswap from kernel 3.9
 * adapt zcache from 3.9  to 3.0 kernel
 * deleted unused zcache.c
 * Backported ZCache mechanism from Linux Kernel 3.9.11
 * fix zram_drv.c
 *  zram: optimize memory operations with clear_page()/copy_page()
 * staging: zram: add per-cpu support to Crypto
 * staging: zram: add Crypto API support
 * drivers/staging/zram: adapt to 3.0 kernel
 * drivers/staging/zram: backport zram from 3.7 kernel part 2
 * drivers/staging/zram: backport zram from 3.7 kernel
 * staging: Add Snappy compression support to zram
 * staging: Add Snappy compression library (v3)
 * Fix Cleancache porting
 * Cleancache & frontswap new headers
 * enabled frontswap
 *  enabled zcache and cleancache
 * Adapt Cleancache & Frontswap on Kernel 3.0
 * added cleancache from 3.7  and frontswap from 3.8
 * Introduce ZCACHE from Kernel 3.8
 * enabled zram and zsmalloc
 * ZSMALLOC source files from Kernel 3.8
 * Added zsmalloc for 3.0 support
 * LZ4 references
 * lib/lzo: Update LZO compression to current upstream version , lib/lzo: Rename lzo1x_decompress.c to lzo1x_decompress_safe.c , lib/lzo: huge LZO decompression speedup on ARM by using unaligned access
 * xz: Tweaking
 * addded piggy.xzkern and modify .gitignore
 * init:calibrate: lpj from linux kernel 3.4
 * boot: Enable XZ compression
 *  crypto-add-lz4-cryptographic-api-fix
 *  crypto: add lz4 Cryptographic API
 *  lib-add-lz4-compressor-module-fix
 * ib: add lz4 compressor module
 * arm: Remove enforced Os flag for LZ4 decompressor
 *  arm: add support for LZ4-compressed kernel
 *  kbuild: fix for updated LZ4 tool with the new streaming format
 *  lib: add support for LZ4-compressed kernel
 *  decompressor: add LZ4 decompressor module
 *  lib: add weak clz/ctz functions
 * sched: smart wake-affine foundation and disable uksm for while.
 * revert hard code dirty ratios
 * aded local version with OC
 * Testing few 4.8 linaro optimization and added localversion in config.
 * fix cpu boost: backport missing functions from 3.4
 * cpu boost: backport missing functions from 3.4
 *  cpufreq: Add a sync limit to cpu-boost
 *  cpufreq: Add cpu-boost driver
 * Full ARM Topology + optimizations part 2
 * Full ARM Topology + optimizations
 * modified .gitignore
 * Imported nebula build script...thanks to xenon...
 * renamed files
 * defconfig: enable UKSM
 * UKSM upgrade to 0.1.2.2
 * add UKSM 0.1.2 part 2
 * Add UKSM 0.1.2
 * Especially on platforms with a slower CPU but a relatively high framebuffer fill bandwidth, like current ARM devices, the existing console monochrome imageblit function used to draw console text is suboptimal for common pixel depths such as 16bpp and 32bpp. The existing code is quite general and can deal with several pixel depths. By creating special case functions for 16bpp and 32bpp, by far the most common pixel formats used on modern systems, a significant speed-up is attained which can be readily felt on ARM-based devices like the Raspberry Pi and the Allwinner platform, but should help any platform using the fb layer.
 * readahead: Optimize divide/multiply by power of 2 using L/R shift
 * This helps performance on moderately dense random reads on SSD.
 * Permanent filesystem TRIM
 * network speed teak for capri
 * Merge branch 'cm11exp' of github.com:k2wl/evolution_i9082 into cm11exp
 * Create omni_i9082_defconfig
 * update to remote branch cm11exp
 * deleted whole repo
 * Merge branch 'cm11exp' of github.com:k2wl/evolution_i9082 into cm11exp
 * Revert "fix BCM polarity, to stock values again"
 * Create omni_i9082_defconfig
 * fix mmc erase commit error
 * added support for stock kernel
 * MMC_CAP_ERASE completely removed part2
 * MMC_CAP_ERASE completely removed
 * hardcode dirty ratios
 *  CPU hotplug: provide a generic helper to disable/enable CPU hotplug
 * nothing special
 * disable some debug [2/n]
 * disable some debug [1/n]
 * Change default swapiness
 *  A few cache related optimizations for Cortex-A9
 * power: decrease the amount of time the device waits after entering lower power state - Thanks Franco
 * Added improved glibc memcpy and memmove functions. and few more changes
 * updates to 3.0.101
 * add frandom support
 * fix linaro memset 2
 * fix linaro memset
 * update to pawtip latest 3.0.101 sources
 * block, bfq: add Early Queue Merge (EQM) to BFQ-v6r2 for 3.0.0
 * block: introduce the BFQ-v6r2 I/O sched for 3.0 part 2
 * block: introduce the BFQ-v6r2 I/O sched for 3.0 part1
 * block: cgroups, kconfig, build bits for BFQ-v6r2-3.0
 *  block: prepare I/O context code for BFQ-v6r2 for 3.0 â€¦
 * new files added to build
 * block, bfq: add Early Queue Merge (EQM) to BFQ-v6r2 for 3.0.0
 * block: introduce the BFQ-v6r2 I/O sched for 3.0
 * block: cgroups, kconfig, build bits for BFQ-v6r2-3.0
 * block: prepare I/O context code for BFQ-v6r2 for 3.0
 * few files updated
 * Added zzmoove 0.7d governer.
 * prepare code zzmoove 0.7d gov.
 * Revert: Activate 'sched_mc_power_savings' as default
 * cpufreq: enforce governor to stay in sync across CPU cores (error implimented)
 * removed whitespace error in previous commit.
 * Sched Tweaks to improve performance....
 * Early Suspend Delay- Sysfs interface
 * revert t2w feature, causing reboots.
 * removed unnecessary file for t2w
 * Touch-to-Wake implementation part 2
 * experimental Touch-to-Wake implementation part 1
 * android logger files added.
 * removed governers
 * fixed compilations of adding gov.
 * adding gov part 2
 * Add governers with few conflics
 * update file
 * compile with GCC 4.7
 * added vchiq_version.c in ignore list
 * enabled LZMO compression.
 * enabled arch power and disabled gentle fair sleepers
 * Activate 'sched_mc_power_savings' as default...
 * fixed arm topology commit.
 * Full ARM Topology by linaro  + optimizations
 * new frequency steps and updates from pawtip repo.
 * enable compiling with linaro 4.7
 * new makefile settings
 * revert to original sources for MTP solution.
 * reverted toolchain and OC.
 * added arm topology support with optimizations
 * give name to kernel
 * revert "all", to fix wifi....
 * revert 3.0.34, causing wifi issue
 * update to 3.0.35
 * Merge branch 'cm11exp' of github.com:k2wl/evolution_i9082 into cm11exp
 * fixed wifi hopefully.
 * fixed wifi i hope :))
 * updated to 3.0.34
 * updated to 3.0.33
 * updated to 3.0.32
 * deleted zip file
 * new parameters
 * Increase Max READAHEAD for better performance.
 * remove "+" in local version, added GCC linaro 4.8.2 support, fixed compression errors.
 * added makefile optimisation flags and OC
 * update with new boot.img and updater script.
 * edited few files
 * added frandom to the build
 * first commit to cm11, thanks to pawtip
 * Cleaned all not used ARCH and not used ARCH/ARM Mega huge commit!
 * Add frandom to the build and removed unnecessary file
 * revert all commits and rebase 4.2.2 update1 source
 * rebase 4.2.2
 * 3.0.32
 * removed files
 * Add Frandom support
 * deleted unneccessary file
 * new source of SamsungBCM cm10.2
 * deleted few junk files
 * added ram disk
 * modified vc version
 * clean the junk in trunk
 * added overclocking and undervolting
 * first commit
#!/usr/bin/perl
## use Data::Dumper;

## git changelog generator
## -----------------------
## Usage: git.generate-changelog [commit-md5]
## -----------------------
## Copyright : Deep Blue Sky Digital Ltd
## Warrantee : ABSOLULTELY NONE WHATSOEVER
## License   : Take your pick.. something opensource 
## -----------------------

@aLines         = split /\n/, `git log`;
$stop           = $ARGV[0];
$author         = '';

foreach my $line (@aLines){
        $author         = $1 if $line =~ /^Author: (\S+)/;
        my $message     = $1 if $line =~ /^    (.*)/;

        if ( $message ) {

                $message .= " ~$author";

                if ( $message =~ /^Fix/i ) {
                        push @{$output{'FIXED'}}, $message;
                } elsif ( $message =~ /^Merge/i ){
                        $message =~ /Merge branch '(.*?)'.*?into (\S+)/sio;
                        if ( $1 ne $2 ){
                                push @{$output{'MERGE'}}, "Merged: $1 -> $2";
                        } else {
                                #push @{$output{'MERGE IGNORE: '}}, "[$1] [$2] $message";
                        }
                } elsif ( $message =~ /^Add/i ){
                        push @{$output{'NEW'}}, $message;
                } else {
                        push @{$output{'OTHER'}}, $message;
                }

                $message = 0;
        }

        last if $line =~ $stop;
}

if ( scalar @{$output{'FIXED'}} ){
        print "\n - FIXED:\n\n -- ";
        print join "\n -- ", @{$output{'FIXED'}};
        print "\n";
}

if ( scalar @{$output{'NEW'}} ){
        print "\n - NEW:\n\n -- ";
        print join "\n -- ", @{$output{'NEW'}};
        print "\n";
}

if ( scalar @{$output{'MERGE'}} ){
        print "\n - BRANCHES MERGED IN:\n\n -- ";
        print join "\n -- ", @{$output{'MERGE'}};
        print "\n";
}

if ( scalar @{$output{'OTHER'}} ){
        print "\n - OTHER CHANGES:\n\n -- ";
        print join "\n -- ", @{$output{'OTHER'}};
        print "\n";
}
